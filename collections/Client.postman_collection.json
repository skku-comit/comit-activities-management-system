{
  "info": {
    "_postman_id": "fb90a31e-b8ad-4c73-a3d8-7ce8dd1720a7",
    "name": "Client",
    "description": "ROLE_ADMIN의 권한이 아니어도 접근 가능한 API입니다.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "34073022"
  },
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Log In",
          "item": [
            {
              "name": "Succeed",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var access = pm.response.headers.get('access');",
                      "pm.globals.set(\"accessToken\", access);"
                    ],
                    "type": "text/javascript",
                    "packages": {}
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript",
                    "packages": {}
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"admin@gmail.com\",\n    \"password\": \"admin\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/login",
                  "host": ["{{base_url}}"],
                  "path": ["login"]
                },
                "description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
              },
              "response": []
            },
            {
              "name": "[401] Authentication Failed",
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\": \"admin@gmail.com\",\r\n    \"password\": \"incorrect_password\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/login",
                  "host": ["{{base_url}}"],
                  "path": ["login"]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Logout",
          "item": [
            {
              "name": "Succeed",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Successful PUT request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript",
                    "packages": {}
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/logout",
                  "host": ["{{base_url}}"],
                  "path": ["logout"]
                },
                "description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
              },
              "response": []
            }
          ]
        },
        {
          "name": "Reissue",
          "item": [
            {
              "name": "Succeed",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript",
                    "packages": {}
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/reissue",
                  "host": ["{{base_url}}"],
                  "path": ["reissue"]
                },
                "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
              },
              "response": []
            }
          ]
        },
        {
          "name": "Join",
          "item": [
            {
              "name": "Succeed",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Successful DELETE request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript",
                    "packages": {}
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"username\": \"comit09\",\r\n  \"password\": \"comit09\",\r\n  \"phoneNumber\": \"01000000009\",\r\n  \"studentId\": \"2000000009\",\r\n  \"email\": \"comit09@gmail.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/join",
                  "host": ["{{base_url}}"],
                  "path": ["join"]
                },
                "description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
              },
              "response": []
            },
            {
              "name": "[409] Duplicate Resource",
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"username\": \"admin\",\r\n  \"password\": \"adminadmin\",\r\n  \"phoneNumber\": \"01000000000\",\r\n  \"studentId\": \"2000000000\",\r\n  \"email\": \"admin@gmail.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/join",
                  "host": ["{{base_url}}"],
                  "path": ["join"]
                }
              },
              "response": []
            },
            {
              "name": "[400] Invalid Email",
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"username\": \"admin\",\r\n  \"password\": \"adminadmin\",\r\n  \"phoneNumber\": \"01099999999\",\r\n  \"studentId\": \"2099999999\",\r\n  \"email\": \"admingmail.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/join",
                  "host": ["{{base_url}}"],
                  "path": ["join"]
                }
              },
              "response": []
            },
            {
              "name": "[400] Invalid Phone Number",
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"username\": \"admin\",\r\n  \"password\": \"adminadmin\",\r\n  \"phoneNumber\": \"sdfsdfsdf\",\r\n  \"studentId\": \"2099999999\",\r\n  \"email\": \"comit99@gmail.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/join",
                  "host": ["{{base_url}}"],
                  "path": ["join"]
                }
              },
              "response": []
            },
            {
              "name": "[400] Invalid Student ID",
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"username\": \"admin\",\r\n  \"password\": \"adminadmin\",\r\n  \"phoneNumber\": \"01099999999\",\r\n  \"studentId\": \"2020312\",\r\n  \"email\": \"comit99@gmail.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/join",
                  "host": ["{{base_url}}"],
                  "path": ["join"]
                }
              },
              "response": []
            },
            {
              "name": "[400] Bad Password",
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"username\": \"admin\",\r\n  \"password\": \"pwd\",\r\n  \"phoneNumber\": \"01099999999\",\r\n  \"studentId\": \"2020312938\",\r\n  \"email\": \"comit99@gmail.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/join",
                  "host": ["{{base_url}}"],
                  "path": ["join"]
                }
              },
              "response": []
            }
          ]
        }
      ],
      "description": "회원가입, 로그인, 로그아웃, 토큰 재발급 등 Auth와 관련된 API입니다."
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "id",
      "value": "1"
    },
    {
      "key": "base_url",
      "value": "https://postman-rest-api-learner.glitch.me/"
    }
  ]
}
